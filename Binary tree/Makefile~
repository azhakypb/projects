TARGET = pa15
GCC = gcc
CFLAGS = -g -std=c99 -Wall -Wshadow -Wvla -Werror -pedantic
CC = $(GCC) $(CFLAGS)
SRCS = pa15.c tree.c 
OBJS = $(SRCS:%.c=%.o)
VALGRIND = valgrind --tool=memcheck --verbose --log-file

all: $(TARGET) testall

testall: test1 test2 test3 test4 test5 test6 test7 valtest

$(TARGET): $(OBJS)
	$(CC) $(OBJS) -o $(TARGET)

test1: $(TARGET)
	./pa15 125 20 result1.bin
	diff result1.bin expected/expected1.bin
test2: $(TARGET)
	./pa15 125 100 result2.bin
	diff result2.bin expected/expected2.bin
test3: $(TARGET)
	./pa15 125 1000 result3.bin
	diff result3.bin expected/expected3.bin
test4: $(TARGET)
	./pa15 45 200 result4.bin
	diff result4.bin expected/expected4.bin
test5: $(TARGET)
	./pa15 79 1200 result5.bin
	diff result5.bin expected/expected5.bin
test6: $(TARGET)
	./pa15 67 1160 result6.bin
	diff result6.bin expected/expected6.bin
test7: $(TARGET)
	./pa15 23 50 result7.bin
	diff result7.bin expected/expected7.bin
valtest: $(TARGET)
	valgrind --track-origins=yes --leak-check=full -v ./pa15 125 20 result4.bin


.c.o:
	$(GCC) $(CFLAGS) -c $*.c

clean:
	rm -f $(OBJS) $(TARGET)
